/*
 * index_html.h: RAPL power meter web interface script
 *
 * Copyright (C) 2014 Intel Corporation. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version
 * 2 or later as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * Author Name <Srinivas.Pandruvada@linux.intel.com>
 *
 */

#ifndef INDEX_HTML_H_
#define INDEX_HTML_H_

const char index_html_contents_header[] = {
"		<!DOCTYPE html>\n"
"		<html>\n"
"			<head>\n"
"				<script>\n"
};

const char index_html_contents_contents[] = {
"		var xmlhttp;\n"
"		var start = 0;\n"
"		var refresh_interval = 5;\n"
"		var refreshIntervalId;\n"
"		var domain_name;\n"
"		var max_domains = 10;\n"
"		var max_sub_domains = 10;\n"
"		var csv_store_headers = '';\n"
"		var log_enable = 0;\n"
"		var csv_store = '';\n"
"\n"
"		function init_array(rows, cols, defaultValue) {\n"
"			var array = [];\n"
"			for (var i = 0; i < rows; i++) {\n"
"				array.push([]);\n"
"				array[i].push(new Array(cols));\n"
"				for (var j = 0; j < cols; j++) {\n"
"					array[i][j] = defaultValue;\n"
"				}\n"
"			}\n"
"\n"
"			return array;\n"
"		}\n"
"\n"
"		var energy_store = init_array(max_domains, max_domains, 0);\n"
"		var max_energy_store = init_array(max_domains, max_domains, 0);\n"
"\n"
"		function addRow(tableID, name, value) {\n"
"\n"
"			var table = document.getElementById(tableID);\n"
"			var rowCount = table.rows.length;\n"
"			var row = table.insertRow(rowCount);\n"
"\n"
"			var cell0 = row.insertCell(0);\n"
"			cell0.innerHTML = name;\n"
"			var cell1 = row.insertCell(1);\n"
"			cell1.innerHTML = value;\n"
"\n"
"\n"
"			var cell2 = row.insertCell(2);\n"
"			cell2.innerHTML = '000.00W';\n"
"\n"
"		}\n"
"\n"
"		function deleteRow(tableID) {\n"
"			var table = document.getElementById(tableID);\n"
"			var rowCount = table.rows.length;\n"
"\n"
"			for (var i = 0; i < rowCount; i++) {\n"
"				var row = table.rows[i];\n"
"				var chkbox = row.cells[0].childNodes[0];\n"
"				if (null != chkbox && true == chkbox.checked) {\n"
"					table.deleteRow(i);\n"
"					rowCount--;\n"
"					i--;\n"
"				}\n"
"			}\n"
"		}\n"
"\n"
"		function deleteAllRows(tableID) {\n"
"			var table = document.getElementById(tableID);\n"
"			var rowCount = table.rows.length;\n"
"\n"
"			for (var i = 0; i < rowCount; i++) {\n"
"				table.deleteRow(i);\n"
"				rowCount--;\n"
"				i--;\n"
"			}\n"
"		}\n"
"\n"
"		function print_table(tableID) {\n"
"			var table = document.getElementById(tableID);\n"
"			var rowCount = table.rows.length;\n"
"\n"
"			for (var i = 0; i < rowCount; i++) {\n"
"				var row = table.rows[i];\n"
"				console.log(row.cells[0].innerHTML,\n"
"					row.cells[1].innerHTML,\n"
"					row.cells[2].innerHTML);\n"
"			}\n"
"		}\n"
"\n"
"		function loadXMLDoc(url, cfunc) {\n"
"			if (window.XMLHttpRequest) {\n"
"				xmlhttp = new XMLHttpRequest();\n"
"\n"
"			} else {\n"
"				xmlhttp =\n"
"					new ActiveXObject(\"Microsoft.XMLHTTP\");\n"
"			}\n"
"			xmlhttp.onreadystatechange = cfunc;\n"
"			console.log('GET URL ' + url);\n"
"			xmlhttp.open(\"Get\", url, false);\n"
"			xmlhttp.send();\n"
"			console.log('Response recd');\n"
"		}\n"
"\n"
"		function get_domain_name(tableid, domain, sub_domain) {\n"
"			var domain_path;\n"
"\n"
"			if (sub_domain == -1) domain_path = root_path +\n"
"				'rapl_domain_name/' + domain;\n"
"			else domain_path = root_path + 'rapl_domain_name/' +\n"
"				domain + '/' + sub_domain;\n"
"\n"
"			loadXMLDoc(domain_path, function () {\n"
"				if (xmlhttp.readyState == 4 &&\n"
"					xmlhttp.status == 200) {\n"
"					if (sub_domain == -1) {\n"
"						addRow(tableid,\n"
"							xmlhttp.responseText, ' ', ' ');\n"
"					} else {\n"
"						addRow(tableid, ' ',\n"
"							xmlhttp.responseText, ' ');\n"
"					}\n"
"					csv_store_headers = csv_store_headers + xmlhttp.responseText.replace(\n"
"						/(\\r\\n|\\n|\\r)/gm, \" \") + ',';\n"
"					return;\n"
"\n"
"				}\n"
"			});\n"
"		}\n"
"\n"
"		function create_sub_domain_rows(domain, tableid) {\n"
"			var count;\n"
"			loadXMLDoc(root_path + 'rapl_domains_count/' + domain,\n"
"				function () {\n"
"					if (xmlhttp.readyState == 4 &&\n"
"						xmlhttp.status == 200) {\n"
"						count = xmlhttp.responseText;\n"
"						for (var i = 0; i < count; ++i) {\n"
"							get_domain_name(tableid, domain, i);\n"
"						}\n"
"					}\n"
"				});\n"
"		}\n"
"\n"
"		function create_domain_rows(tableid) {\n"
"			loadXMLDoc(root_path + 'rapl_domains_count',\n"
"				function () {\n"
"					if (xmlhttp.readyState == 4 &&\n"
"						xmlhttp.status == 200) {\n"
"						var count = xmlhttp.responseText;\n"
"						for (var i = 0; i < count; ++i) {\n"
"							get_domain_name(tableid, i, -1);\n"
"							create_sub_domain_rows(i, tableid);\n"
"						}\n"
"					}\n"
"				});\n"
"			csv_store_headers = csv_store_headers + '\\r\\n';\n"
"		}\n"
"\n"
"\n"
"		function getPower(domain, sub_domain, row) {\n"
"			var url;\n"
"			var curr_energy;\n"
"			var power;\n"
"			var diff;\n"
"			var valid;\n"
"			if (sub_domain == -1) url = root_path +\n"
"				'rapl_domain_energy/' + domain;\n"
"			else url = root_path + 'rapl_domain_energy/' +\n"
"				domain + '/' + sub_domain;\n"
"\n"
"			loadXMLDoc(url, function () {\n"
"				if (xmlhttp.readyState == 4 &&\n"
"					xmlhttp.status == 200) {\n"
"					curr_energy = xmlhttp.responseText;\n"
"					if (curr_energy < energy_store[domain][\n"
"						sub_domain + 1\n"
"					]) {\n"
"						if (max_energy_store[domain][sub_domain + 1]) {\n"
"							diff = max_energy_store[domain][\n"
"								sub_domain + 1\n"
"							] -\n"
"								energy_store[domain][\n"
"									sub_domain + 1\n"
"							];\n"
"							diff = diff + curr_energy;\n"
"						}\n"
"					} else {\n"
"						diff = curr_energy - energy_store[\n"
"							domain][sub_domain + 1];\n"
"					}\n"
"					if (diff) {\n"
"						power = diff / (1000000 * refresh_interval);\n"
"						power = Math.round(power * 1000) / 1000;\n"
"\n"
"						if (energy_store[domain][sub_domain + 1]) {\n"
"							row.cells[2].innerHTML = power + 'W';\n"
"							if (log_enable)\n"
"								csv_store = csv_store + power + ',';\n"
"						} else {\n"
"							row.cells[2].innerHTML = 'Sampling...';\n"
"							if (log_enable)\n"
"								csv_store = csv_store + '00.00' + ',';\n"
"						}\n"
"					}\n"
"					energy_store[domain][sub_domain + 1] =\n"
"						curr_energy;\n"
"\n"
"					return power;\n"
"				}\n"
"			});\n"
"\n"
"		}\n"
"\n"
"		function getMaxEnergy(domain, sub_domain) {\n"
"			var url;\n"
"			var max_energy;\n"
"			var power;\n"
"\n"
"			if (sub_domain == -1)\n"
"				url = root_path + 'rapl_domain_max_energy/' +\n"
"					domain;\n"
"			else\n"
"				url = root_path + 'rapl_domain_max_energy/' +\n"
"					domain + '/' + sub_domain;\n"
"\n"
"			loadXMLDoc(url, function () {\n"
"				if (xmlhttp.readyState == 4 &&\n"
"					xmlhttp.status == 200) {\n"
"					max_energy_store[domain][\n"
"						sub_domain + 1\n"
"					] =\n"
"						xmlhttp.responseText;\n"
"				}\n"
"			});\n"
"		}\n"
"\n"
"		function update_table(tableID) {\n"
"			var table = document.getElementById(tableID);\n"
"			var rowCount = table.rows.length;\n"
"			var domain_cnt = 0;\n"
"			var sub_domain_cnt = 0;\n"
"			var power;\n"
"\n"
"			domain_cnt = -1;\n"
"\n"
"			for (var i = 0; i < rowCount; i++) {\n"
"				var row = table.rows[i];\n"
"				if (domain_cnt >= max_domains) break;\n"
"				if (sub_domain_cnt >= max_sub_domains)\n"
"					break;\n"
"				if (row.cells[0].innerHTML == ' ') {\n"
"					getPower(domain_cnt, sub_domain_cnt,\n"
"						row);\n"
"					sub_domain_cnt = sub_domain_cnt + 1;\n"
"				} else {\n"
"					sub_domain_cnt = 0;\n"
"					domain_cnt = domain_cnt + 1;\n"
"					getPower(domain_cnt, -1, row);\n"
"				}\n"
"			}\n"
"			if (log_enable)\n"
"				csv_store = csv_store + '\\r\\n';\n"
"		}\n"
"\n"
"		function startFunction(tableid) {\n"
"			var sub_domain_cnt = 0;\n"
"			var table = document.getElementById(tableid);\n"
"			var rowCount;\n"
"\n"
"			var store_refresh_interval = refresh_interval;\n"
"			if (start == 1)\n"
"				return;\n"
"			start = 1;\n"
"			csv_store = '';\n"
"			csv_store_headers = '';\n"
"			deleteAllRows(tableid);\n"
"			create_domain_rows(tableid);\n"
"			domain_cnt = -1;\n"
"			rowCount = table.rows.length;\n"
"			for (var i = 0; i < rowCount; i++) {\n"
"				var row = table.rows[i];\n"
"				if (domain_cnt >= max_domains) break;\n"
"				if (sub_domain_cnt >= max_sub_domains)\n"
"					break;\n"
"				if (row.cells[0].innerHTML == ' ') {\n"
"					getMaxEnergy(domain_cnt,\n"
"						sub_domain_cnt, row);\n"
"					energy_store[domain_cnt][\n"
"						sub_domain_cnt + 1\n"
"					] = 0;\n"
"					sub_domain_cnt = sub_domain_cnt + 1;\n"
"				} else {\n"
"					sub_domain_cnt = 0;\n"
"					domain_cnt = domain_cnt + 1;\n"
"					getMaxEnergy(domain_cnt, -1, row);\n"
"					energy_store[domain_cnt][\n"
"						sub_domain_cnt\n"
"					] = 0;\n"
"				}\n"
"				row.cells[2].innerHTML = '0.00' + 'W';\n"
"			}\n"
"			update_table(tableid);\n"
"			refreshIntervalId = setInterval(function () {\n"
"				update_table(tableid);\n"
"			}, (refresh_interval * 1000));\n"
"\n"
"		}\n"
"\n"
"		function stopFunction() {\n"
"			start = 0;\n"
"			log_enable = 0;\n"
"			clearInterval(refreshIntervalId);\n"
"		}\n"
"\n"
"		function download(filename) {\n"
"			var contentType = 'application/text';\n"
"			var a = document.createElement('a');\n"
"			var content;\n"
"			content = csv_store_headers + csv_store;\n"
"			var blob = new Blob([content], {\n"
"				'type': contentType\n"
"			});\n"
"			a.href = window.URL.createObjectURL(blob);\n"
"			a.download = filename;\n"
"			a.click();\n"
"		}\n"
"\n"
"		function log_start_stop(start) {\n"
"			if (start == 'TRUE') {\n"
"				log_enable = 1;\n"
"				csv_store = '';\n"
"			} else\n"
"				log_enable = 0;\n"
"		}\n"
"\n"
"		function updatePollInterval(id) {\n"
"			var form = document.getElementById(id);\n"
"\n"
"			console.log('form data:' + form.value);\n"
"			if (form.value > 0) {\n"
"				refresh_interval = form.value;\n"
"			}\n"
"		}\n"
"	</script>\n"
"</head>\n"
"\n"
"<body>\n"
"\n"
"	<div style=\"width:600px;border:3px inset blue;text-align:center\">\n"
"		<h2>\n"
"			Software Power Meter\n"
"		</h2>\n"
"		<button type=\"button\" onclick=\"startFunction('domains')\">\n"
"			Start\n"
"		</button>\n"
"		<button type=\"button\" onclick=\"stopFunction()\">\n"
"			Stop\n"
"		</button>\n"
"\n"
"		<br>\n"
"		<br>\n"
"		<form name='pollIntervalForm'>\n"
"			Poll Interval (Seconds)\n"
"			<input type='text' onChange=\"updatePollInterval('poll_interval');\"\n"
"			id=\"poll_interval\" />\n"
"			<br />\n"
"		</form>\n"
"		<br>\n"
"		<br>\n"
"		<table id=\"domains\" border=\"1\" align=\"center\" style=\"font-family:Georgia, Garamond, Serif;color:blue;font-style:italic;\">\n"
"		</table>\n"
"		<br>\n"
"		<button type=\"button\" onclick=\"log_start_stop('TRUE')\">\n"
"			Enable Log\n"
"		</button>\n"
"		<button type=\"button\" onclick=\"log_start_stop('FALSE')\">\n"
"			Disable Log\n"
"		</button>\n"
"		<button type=\"button\" onclick=\"download('rapl_power_log.csv')\">\n"
"			Download\n"
"		</button>\n"
"		<br>\n"
"		<h4>\n"
"			Using Running Average Power Limit (RAPL) feature on\n"
"		<br>\n"
"			Intel&#174 Processors\n"
"		</h4>\n"
"	</div>\n"
"\n"
"</body>\n"
"\n"
"</html>\n"
};

#endif /* INDEX_HTML_H_ */
